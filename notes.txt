In ns-3 the basic computing device abstraction is called the node. This abstraction is represented in C++ by the class
Node. The Node class provides methods for managing the representations of computing devices in simulations.

In ns-3 the basic abstraction for a user program that generates some activity to be simulated is the application.
This abstraction is represented in C++ by the class Application. The Application class provides methods
for managing the representations of our version of user-level applications in simulations. Developers are expected
to specialize the Application class in the object-oriented programming sense to create new applications.

The Channel class provides methods for managing communication subnetwork objects and connecting nodes to
them. Channels may also be specialized by developers in the object oriented programming sense. A Channel specialization
may model something as simple as a wire. The specialized Channel can also model things as complicated
as a large Ethernet switch, or three-dimensional space full of obstructions in the case of wireless networks. the media over which data flows in these networks
are called channels.

A NIC will not work without a software driver to control the hardware. In Unix (or Linux), a piece of peripheral hardware
is classified as a device. Devices are controlled using device drivers, and network devices (NICs) are controlled
using network device drivers collectively known as net devices. In Unix and Linux you refer to these net devices by
names such as eth0.

NodeContainer represents a computer to which we are going to
add things like protocol stacks, applications and peripheral cards. The NodeContainer topology helper provides a
convenient way to create, manage and access any Node objects that we create in order to run a simulation. The first
line above just declares a NodeContainer which we call nodes.

Our Topology Helpers follow this intimate coupling and therefore
you will use a single PointToPointHelper to configure and connect ns-3 PointToPointNetDevice and
PointToPointChannel objects in this script.

We will need to have a list of all of the NetDevice objects that are created, so we use a NetDeviceContainer to
hold them just as we used a NodeContainer to hold the nodes we created.

The InternetStackHelper is a topology helper that is to internet stacks what the PointToPointHelper is
to point-to-point net devices.

In ns-3 we make the association between an IP address and a device using an
Ipv4Interface object. Just as we sometimes need a list of net devices created by a helper for future reference we
sometimes need a list of Ipv4Interface objects. The Ipv4InterfaceContainer provides this functionality.